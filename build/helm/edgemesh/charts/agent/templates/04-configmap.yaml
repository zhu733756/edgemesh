apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Release.Name }}-agent-cfg
  namespace: kubeedge
  labels:
    k8s-app: kubeedge
    kubeedge: edgemesh-agent
data:
  edgemesh-agent.yaml: |-
    apiVersion: {{ .Values.apiVersion }}
    kind: {{ .Values.kind }}
    commonConfig:
      dummyDeviceName: {{ .Values.commonConfig.dummyDeviceName }}
      dummyDeviceIP: {{ .Values.commonConfig.dummyDeviceIP }}
      configMapName: {{ .Release.Name }}-agent-cfg
    {{- if .Values.kubeAPIConfig }}
    kubeAPIConfig:
      {{- if .Values.kubeAPIConfig.burst }}
      burst: {{ .Values.kubeAPIConfig.burst }}
      {{- end}}
      {{- if .Values.kubeAPIConfig.contentType }}
      contentType: {{ .Values.kubeAPIConfig.contentType }}
      {{- end}}
      {{- if .Values.kubeAPIConfig.kubeConfig }}
      kubeConfig: {{ .Values.kubeAPIConfig.kubeConfig }}
      {{- end}}
      {{- if .Values.kubeAPIConfig.master }}
      master: {{ .Values.kubeAPIConfig.master }}
      {{- end}}
      {{- if .Values.kubeAPIConfig.qps }}
      qps: {{ .Values.kubeAPIConfig.qps }}
      {{- end}}
    {{- end}}
    goChassisConfig:
      protocol:
        tcpBufferSize: {{ .Values.goChassisConfig.protocol.tcpBufferSize }}
        tcpClientTimeout: {{ .Values.goChassisConfig.protocol.tcpClientTimeout }}
        tcpReconnectTimes: {{ .Values.goChassisConfig.protocol.tcpReconnectTimes }}
      loadBalancer:
        defaultLBStrategy: {{ .Values.goChassisConfig.loadBalancer.defaultLBStrategy }}
        supportLBStrategies:
        {{- range .Values.goChassisConfig.loadBalancer.supportLBStrategies }}
        - {{ . | title }}
        {{- end }}
        consistentHash:
          partitionCount: {{ .Values.goChassisConfig.loadBalancer.consistentHash.partitionCount }}
          replicationFactor: {{ .Values.goChassisConfig.loadBalancer.consistentHash.replicationFactor }}
          load: {{ .Values.goChassisConfig.loadBalancer.consistentHash.load }}
    modules:
      edgeDNS:
        {{- if .Values.modules.edgeDNS.enable }}
        enable: {{ .Values.modules.edgeDNS.enable }}
        {{- end}}
        listenPort: {{ .Values.modules.edgeDNS.listenPort }}
      edgeProxy:
        enable: {{ .Values.modules.edgeProxy.enable }}
        listenPort: {{ .Values.modules.edgeProxy.listenPort }}
        {{- if ne .Values.modules.edgeProxy.subNet "" }}
        subNet: {{ .Values.modules.edgeProxy.subNet }}
        {{- end}}
        socks5Proxy:
          enable: {{ .Values.modules.edgeProxy.socks5Proxy.enable }}
          listenPort: {{ .Values.modules.edgeProxy.socks5Proxy.listenPort }}
      tunnel:
        enable: {{ .Values.modules.tunnel.enable }}
        listenPort: {{ .Values.modules.tunnel.listenPort }}
        security:
          enable: {{ .Values.modules.tunnel.security.enable }}
          httpServer: {{ .Values.modules.tunnel.security.httpServer }}
          tlsCaFile: {{ .Values.modules.tunnel.security.tlsCaFile }}
          tlsCertFile: {{ .Values.modules.tunnel.security.tlsCertFile}}
          tlsPrivateKeyFile: {{ .Values.modules.tunnel.security.tlsPrivateKeyFile }}
        enableHolePunch: {{ .Values.modules.tunnel.enableHolePunch }}
